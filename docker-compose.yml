version:  '3.7'
services: #объявление блока с описанием сервисов
    javatrack: #микросервис треков
        environment: #данные бд, а также какой 
         - DATABASE_HOST=db_track
         - DATABASE_USER=${DATABASE_TRACK_USER}
         - DATABASE_PASSWORD=${DATABASE_TRACK_PASSWORD}
         - DATABASE_NAME=${DATABASE_TRACK_NAME}
         - RABBITMQ_HOST=rabbit_brocker
        container_name: javatrack #имя контейнера
        build: track_ms #указание пути к докерфайлу для сборки
        restart: on-failure #правило перезапуска контейнера
        expose: #открытый порт внутренней сети
          - "8091" 
        depends_on: #сначала должна запуститься бд
         - db_track
         - rabbit_brocker
     
    javafile: #микросервис файлов
        environment: #данные бд, а также какой 
         - DATABASE_HOST=db_file
         - DATABASE_USER=${DATABASE_FILE_USER}
         - DATABASE_PASSWORD=${DATABASE_FILE_PASSWORD}
         - DATABASE_NAME=${DATABASE_FILE_NAME}
         - RABBITMQ_HOST=rabbit_brocker
        container_name: javafile #имя контейнера
        build: audio_ms #указание пути к докерфайлу для сборки
        restart: on-failure #правило перезапуска контейнера
        expose: #открытый порт внутренней сети
         - "8082" 
        depends_on: #сначала должна запуститься бд
         - db_file
         - rabbit_brocker
        
        volumes: # загружаемые файлы
         - ./file_audio:/app/files-upload-audio
         - ./file_image:/app/files-upload-image

    my_nginx: #nginx
        container_name: my_nginx
        image: nginx:latest
        restart: on-failure
        ports:
         - "80:80"
        volumes:
         - ./logs/nginx:/var/log/nginx  #логи
         - ./config/nginx:/etc/nginx/conf.d #конфиги
        depends_on: #сначала должнен запуститься микросервис
         - javatrack
         - javafile
 
    db_track: #бд треков
        container_name: db_track
        image: postgres
        restart: on-failure
        expose:
         - "5432"
        environment: #использование переменных окружения
         POSTGRES_USER: ${DATABASE_TRACK_USER}
         POSTGRES_PASSWORD: ${DATABASE_TRACK_PASSWORD}
         POSTGRES_DB: ${DATABASE_TRACK_NAME}
        volumes:
         - ./db_track:/var/lib/postgresql/data #данные бд
      
    db_file: #бд файлов
        container_name: db_file
        image: postgres
        restart: on-failure
        expose:
         - "5432"
        environment: #использование переменных окружения
         POSTGRES_USER: ${DATABASE_FILE_USER}
         POSTGRES_PASSWORD: ${DATABASE_FILE_PASSWORD}
         POSTGRES_DB: ${DATABASE_FILE_NAME}
        volumes:
         - ./db_audio:/var/lib/postgresql/data #данные бд
         
         
    rabbit_brocker: # RabbitMQ
        container_name: rabbit_brocker
        image: rabbitmq:3-management
        restart: on-failure
        expose:
         - "5672"
         - "15672"
        ports:
         - "15672:15672"
        #environment:
        # RABBITMQ_DEFAULT_USER: "admin"
         #RABBITMQ_DEFAULT_PASS: "admin"    
        volumes:
        - ./logs/rabbit:/var/log/rabbitmq
        
